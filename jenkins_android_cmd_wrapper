#!/usr/bin/env python3

# This file is part of Jenkins-Android-Emulator Helper.
#    Copyright (C) 2018  Michael Musenbrock
#
# Jenkins-Android-Helper is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Jenkins-Android-Helper is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Jenkins-Android-Helper.  If not, see <http://www.gnu.org/licenses/>.

## ANDROID_SDK_ROOT needs to be set to the Android SDK

import os
import sys
import subprocess
import traceback

from jenkins_android_sdk import AndroidSDK
import ini_helper_functions
import android_emulator_helper_functions

_OPWD = os.getcwd()

### assume that the script runs locally
if not 'WORKSPACE' in os.environ:
    print("It seems that the script runs outside Jenkins. WORKSPACE will be set to PWD [" + _OPWD + "]!")
    os.environ["WORKSPACE"] = _OPWD

## Make sure the avd is installed in the current workspace
os.environ["ANDROID_AVD_HOME"] = os.environ["WORKSPACE"]

android_sdk = AndroidSDK()

ignore_return_code = False
return_code = 0

def usage():
    print("""`basename $0` [ -I ] <command>

This is a simple wrapper for arbitrary command calls, which sets the proper ANDROID_SERIAL.
If the -I option is given, the return value of the command is overwritten and the script
exits always with 0.

OPTIONS:
  -I               Ignore the return value of the <command>, script will always return 0
  <command>        The command with parameters to execute. Having ANDROID_SERIAL set to the emulator started with this toolset
""")
    sys.exit(1)

run_command = sys.argv[1:]

# If first parameter is '-I' ignore the return code of the executed command
if len(run_command) > 0 and run_command[0] == "-I":
    ignore_return_code = True
    run_command = run_command[1:]

# Print usage if no parameter is given
if run_command is None or len(run_command) == 0:
    usage
    sys.exit(0)

try:
    return_code = android_sdk.run_command_with_android_serial_set(run_command, cwd=_OPWD)
except:
    return_code = 100
    traceback.print_exc()

if ignore_return_code and return_code != 0:
    print("Overwriting return code [%d] with 0" % (return_code))
    return_code = 0

sys.exit(return_code)
